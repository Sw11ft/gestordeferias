@using MvcFlashMessages
@model emp_ferias.Models.CreateMarcacaoViewModel

@{
    ViewBag.Title = "Criar Marcação - Gestor de Férias";
}

<div class="jumbotron">
    <div class="container-fluid body-content">
        <h1 id="icon">Criar Marcação</h1>
        <p class="lead container body-content jumbotron-description"></p>
    </div>
</div>

<div class="content">

    <ol class="overflow breadcrumb">
        <li>@Html.ActionLink("Home", "Index", "Home")</li>
        <li>@Html.ActionLink("Marcações", "Index", "Marcacoes")</li>
        <li class="active">Criar Marcação</li>
    </ol>


    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.RenderFlash()
        <div class="form-horizontal col-lg-offset-3 top15">
            <div class="form-group col-lg-offset-3">
                @Html.Label("De", htmlAttributes: new { @class = "control-label col-lg-2" })
                <div class="col-lg-5">
                    <div class='input-group date divs_Datas'>
                        @Html.EditorFor(model => model.DataInicio, new { htmlAttributes = new { @class = "form-control", @id = "dtMin" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.DataInicio, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group col-lg-offset-3">
                @Html.Label("Até", htmlAttributes: new { @class = "control-label col-lg-2" })
                <div class="col-lg-5">
                    <div class='input-group date divs_Datas'>
                        @Html.EditorFor(model => model.DataFim, new { htmlAttributes = new { @class = "form-control", @id = "dtMax" } })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(model => model.DataFim, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="form-group">
                @Html.Label("Notas", htmlAttributes: new { @class = "control-label col-lg-2" })
                <div class="col-lg-5">
                    @Html.TextAreaFor(model => model.Notas, new { @class = "form-control", @id="charactersTextBox", @rows = "5" })
                    <div class="panel panel-default" id="charactersPanel">
                        <div class="panel-body" style="text-align: center">
                            <b>Caracteres restantes: </b><span id="characters">100</span>
                        </div>
                    </div>
                    @Html.ValidationMessageFor(model => model.Notas, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.Label("Razão", htmlAttributes: new { @class = "control-label col-lg-2" })
                <div class="col-lg-5">
                    @Html.EnumDropDownListFor(model => model.Motivo, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Motivo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-lg-offset-2 col-lg-10">
                    <input id="submit-btn" type="submit" value="Criar" class="btn btn-round-default" />
                </div>
            </div>
        </div>
    }

</div>
@section scripts {
    <script>
        $(function () {
            $('#charactersTextBox').on('change keyup paste click', function () {
                $('#characters').text(100 - $('#charactersTextBox').val().trim().length);

                if ($('#charactersTextBox').val().trim().length > 100) {
                    $('#submit-btn').prop('disabled', true);
                }
                else {
                    $('#submit-btn').prop('disabled', false);
                }
            });
        });
    </script>    
}