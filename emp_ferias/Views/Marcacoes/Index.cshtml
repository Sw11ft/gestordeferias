@using MvcFlashMessages
@using emp_ferias.lib.Classes
@model emp_ferias.Models.IndexMarcacaoViewModel
@{
    ViewBag.Title = "Marcações - Gestor de Férias";
}
<style>
    .flash-message, .flash-messages {
        margin: 35px 0px 0px 0px;
        margin-bottom: 0px !important;
    }
</style>
<!-- APPROVE MODAL -->
<div class="modal fade" id="approve" tabindex="-1" role="dialog" aria-labelledby="approve">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="approvetitle">Aprovar Marcação</h4>
            </div>
            @using (Html.BeginForm("Approve", "Marcacoes", FormMethod.Post, htmlAttributes: new { id = "approveform" }))
            {
                <div class="modal-body" style="text-align: left">
                    <p>Está prestes a aceitar a marcação. Continuar?</p>
                    <br />
                    @Html.Hidden("marcId", new { id = "marcId" })
                    @Html.CheckBox("sendEmail", new { id = "sendEmail", @checked = "checked" }) Notificar por email
                </div>
                <div class="modal-footer">
                
                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <button type="button" id="closeModalButton" class="btn btn-round-neutral" data-dismiss="modal">Cancelar</button>
                            <input name="approve" type="submit" value="Aprovar" class="btn btn-round-success" />
                        </div>
            
                </div>
            }
        </div>
    </div>
</div>
<!--END MODAL-->
<!-- REJECT MODAL -->
<div class="modal fade" id="reject" tabindex="-1" role="dialog" aria-labelledby="reject modal">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="rejecttitle">Rejeitar Marcação </h4>
            </div>
            @using (Html.BeginForm("Reject", "Marcacoes", FormMethod.Post, htmlAttributes: new { id = "rejectform"}))
            {
                @Html.AntiForgeryToken();
                <div class="modal-body" style="text-align: left">
                    <p><b>Está prestes a rejeitar a marcação.<br />Para continuar,</b> escreva o motivo:</p>

                    @Html.TextArea("Razao", new { @class = "form-control", id = "rejectTextBox", rows = "5", placeholder = "Motivo" })
                    <div class="panel panel-default" id="charactersPanel">
                        <div class="panel-body" style="text-align: center">
                            <b>Caracteres restantes: </b><span id="characters">100</span>
                        </div>
                    </div>
                @Html.Hidden("marcRejectId", new { id = "marcRejectId" })
                @Html.CheckBox("sendEmail", new { id = "sendEmail", @checked = "checked" }) Notificar por email
                </div>
                <div class="modal-footer">
                    <div class="form-horizontal">
                        <button id="closeModalButton" type="button" class="btn btn-round-neutral" data-dismiss="modal">Cancelar</button>
                        <input id="rejectButton" name="reject" type="submit" value="Rejeitar" class="btn btn-round-danger" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<!--END MODAL--> 
<link rel="stylesheet" href="~/bower_components/bootstrap-notifications/dist/stylesheets/bootstrap-notifications.min.css" />
<!--jumbotron-->
<div class="jumbotron">
    <div class="container-fluid body-content">
        <h1 id="icon">
            Marcações&nbsp;
            @if (Model.LoggedUser.RoleTests.IsAdmin)
            {
                <button class="btn-simple" style="font-size: 0.8em" onclick="location.href='@Url.Action("Refresh", "Marcacoes")'; return false;"><i data-count="Admin" class="fa fa-refresh notification-icon"></i></button>
            }
        </h1>
        <p class="lead container body-content jumbotron-description"></p>
    </div>
</div>

<div class="content marcacoes-content">
    <!--breadcrumb-->
    <div class="col-md-9" style="padding: 0">
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Página Inicial", "Index", "Home")</li>
            <li class="active">Marcações</li>
        </ol>
    </div>
    <!--botões-->
    <div class="col-md-3" style="padding: 0">
        <button onclick="location.href='@Url.Action("Create", "Marcacoes")'; return false;" class="btn btn-round-neutral" id="create-new-button"><i class="fa fa-bookmark" aria-hidden="true"></i>&nbsp;Criar Nova</button>
        <button onclick="location.href='@Url.Action("Overview", "Marcacoes")'; return false;" class="btn btn-round-default" id="overview-button"><i class="fa fa-calendar-o" aria-hidden="true"></i>&nbsp;Calendário</button>
    </div>
    
    <br />
    
    @Html.RenderFlash()

    @if (Model.LoggedUser.RoleTests.IsAdmin || Model.LoggedUser.RoleTests.IsMod)
    {    
        <!--action PENDING panel-->
        <div class="col-md-12" style="padding: 0">
            <div class="panel panel-default" data-toggle="collapse" data-trigger="click" data-target="#table1">
                <div class="panel-body">
                    <div class="col-md-1"></div>
                    <div class="col-md-10">
                        Ação Pendente
                            @{
                                var i = 0;
                                foreach (var item in Model.Marcacoes)
                                {
                                    if (item.Status == Status.Pendente)
                                    {
                                        i++;
                                    }
                                }
                                <span class="badge @(i == 0 ? "":"bg-primary")" id="pendingAmount"><text>@i</text></span>
                            }
                           
                    </div>
                    <div class="col-md-1">
                        <button button id="table1btn" class="btn-simple" style="float:right; outline: none !important" data-toggle="collapse" data-target="#table1"><i id="collapse-btn" class="fa fa-caret-down" aria-hidden="true"></i></button>
                    </div>
                </div>
            </div>
        </div>
        <!--pending table-->
        <div class="collapse" id="table1" style="width: 100%">
            <table class="table table-hover marcacoes-table" id="actionPendingTable" style="width: 100%">
                <thead>
                    <tr>
                        <th>
                            ID
                        </th>
                        <th>
                            Utilizador
                        </th>
                        <th>
                            Data de Pedido
                        </th>
                        <th>
                            Duração
                        </th>
                        <th>
                            Razão
                        </th>
                        <th>
                            Notas
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Marcacoes)
                    {
                        if (item.Status == Status.Pendente)
                        {
                            <tr class="bg-info">
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.User.UserName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DataPedido)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DataInicio) – @Html.DisplayFor(modelItem => item.DataFim)
                                    <button style="outline: none" type="button" class="btn-simple" data-container="body" data-trigger="hover" data-toggle="popover" data-placement="bottom" data-content="Total: 
                                    @{
                                        var length = (item.DataFim - item.DataInicio).Days +1;
                                        string lengthstring;
                                        if (length == 1)
                                        {
                                            lengthstring = length + " dia";
                                        }
                                        else
                                        {
                                            lengthstring = length + " dias";
                                        }
                                        } @lengthstring"><i class="fa fa-info-circle" aria-hidden="true"></i></button>
                                </td>
                                <td>
                                    @(item.Motivo == Motivo.Ferias ? Html.Name("Férias") : Html.DisplayFor(modelItem => item.Motivo)) 
                                </td>
                                <td>
                                    @{
                                        if (!(item.Notas == null) && !(item.Notas.Length == 0))
                                        {
                                            @item.Notas.Substring(0, Math.Min(item.Notas.Length, 25))
                                                if (item.Notas.Count() > 25)
                                                {
                                                   <text>... </text> <button style="outline: none" type="button" class="btn-simple" data-container="body" data-trigger="hover" data-toggle="popover" data-placement="bottom" data-content="@item.Notas"><i class="fa fa-info-circle" aria-hidden="true"></i></button>
                                            }
                                        }
                                        else
                                        {
                                            @Html.Label("–", new { @class = "empty-notes" });
                                        }
                                    }

                                </td>
                                <td>
                                    <div class="btn-group">
                                        <button id="@(item.Id)" class="btn btn-round-success" type="button" data-toggle="modal" data-target="#approve">Aprovar</button>
                                        <button id="@(item.Id)" class="btn btn-round-danger" type="button" data-toggle="modal" data-target="#reject">Rejeitar</button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <!--PREVIOUS panel-->
        <div class="col-md-12" style="padding: 0">
            <div class="panel panel-default">
                <div class="panel-body">
                    Anteriores
                </div>
            </div>
        </div>
        <br />
    }

    <div class="table-wrapper col-md-12">
        <table id="previousTable" class="table table-hover marcacoes-table" style="width: 100%">
            <thead>
                <tr>
                    <th>
                        ID
                    </th>
                    <th>
                        Utilizador
                    </th>
                    <th>
                        Data de Pedido
                    </th>
                    <th>
                        Duração
                    </th>
                    <th>
                        Razão
                    </th>
                    <th>
                        Notas
                    </th>
                    <th>
                        Estado
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Marcacoes)
                {
                    if (item.Status != Status.Pendente)
                    {
               
                        <tr class="bg-info">
                    
                            <td>
                                @Html.DisplayFor(modelItem => item.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.User.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataPedido)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataInicio) – @Html.DisplayFor(modelItem => item.DataFim)
                                <button style="outline: none" type="button" class="btn-simple" data-container="body" data-trigger="hover" data-toggle="popover" data-placement="bottom" data-content="Total:
                                    @{
                                        var length = (item.DataFim - item.DataInicio).Days +1;
                                        string lengthstring;
                                        if (length == 1)
                                        {
                                            lengthstring = length + " dia";
                                        }
                                        else
                                        {
                                            lengthstring = length + " dias";
                                        }
                                        } @lengthstring">
                                    <i class="fa fa-info-circle" aria-hidden="true"></i>
                                </button>
                            </td>
                            <td>
                                @(item.Motivo == Motivo.Ferias ? Html.Name("Férias") : Html.DisplayFor(modelItem => item.Motivo)) 
                            </td>
                            <td>
                                @{
                                    if (!(item.Notas == null) && !(item.Notas.Length == 0))
                                    {
                                        @item.Notas.Substring(0, Math.Min(item.Notas.Length, 15))
                                        if (item.Notas.Count() > 15)
                                        {
                                            <text>... </text> <button style="outline: none" type="button" class="btn-simple" data-container="body" data-trigger="hover" data-toggle="popover" data-placement="bottom" data-content="@item.Notas"><i class="fa fa-info-circle" aria-hidden="true"></i></button>
                                        }
                                    }
                                    else
                                    {
                                        @Html.Label("–", new { @class = "empty-notes" });
                                    }
                                }
                            </td>
                            <td>
                                <span class="label @(item.Status == Status.EmProgresso ? "label-success" 
                                                   : item.Status == Status.Aprovado ? "label-primary" 
                                                   : item.Status == Status.Expirado ? "label-default"
                                                   : item.Status == Status.Finalizado ? "label-info"
                                                   : item.Status == Status.Rejeitado ? "label-danger"
                                                   : "label-warning"
                                                   )">@(item.Status == Status.EmProgresso ? Html.Label("Em Progresso") : Html.DisplayFor(x => item.Status))</span>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

</div>

@section scripts{
<script type="text/javascript">
    $(document).ready(function () {
        if ($('#pendingAmount').text() == '0') {
            $('#table1btn').hide();
        }
        
        $('#table1').on('show.bs.collapse', function () {
            $('#collapse-btn').addClass('fa-caret-up').removeClass('fa-caret-down');
        })

        $('#table1').on('hide.bs.collapse', function () {
            $('#collapse-btn').addClass('fa-caret-down').removeClass('fa-caret-up');
        })

        $('[data-toggle="popover"]').popover();

        $('.modal').on('show.bs.modal', function (e) {
            var $trigger = $(e.relatedTarget);
            $('#approvetitle').text("Aprovar marcação #" + $trigger.attr('id'));
            $('#rejecttitle').text("Rejeitar marcação #" + $trigger.attr('id'));
            $('#dismisstitle').text("Ignorar marcação #" + $trigger.attr('id'));
            $('#marcId').attr("value", $trigger.attr('id'));
            $('#marcRejectId').attr("value", $trigger.attr('id'));
            $('#marcRejectId').attr("value", $trigger.attr('id'));
            $('#rejectTextBox').val('');
        })

        $('#rejectButton').prop('disabled', true);

        $('#rejectTextBox').on('change keyup paste click', function() {
            $('#characters').text(100 - $('#rejectTextBox').val().trim().length);

            if ($('#rejectTextBox').val().trim().length == 0) {
                $('#rejectButton').prop('disabled', true);
            }
            else if ($('#rejectTextBox').val().trim().length > 100) {
                $('#rejectButton').prop('disabled', true);
            }
            else {
                $('#rejectButton').prop('disabled', false);
            }
        })

        $('#actionPendingTable').DataTable({
            "aoColumns": [
                null,
                null,
                { "bSortable": false },
                { "bSortable": false },
                null,
                { "bSortable": false },
                { "bSortable": false }
            ],
            language: { 
                "sProcessing":   "A processar...",
                "sLengthMenu":   "Mostrar _MENU_ registos",
                "sZeroRecords":  "Não foram encontrados resultados",
                "sInfo":         "Mostrando _START_ a _END_ de _TOTAL_ registos",
                "sInfoEmpty":    "Mostrando 0 a 0 de 0 registos",
                "sInfoFiltered": "(filtrado de _MAX_ registos no total)",
                "sInfoPostFix":  "",
                "sSearch":       "Procurar:",
                "sUrl":          "",
                "oPaginate": {
                    "sFirst":    "Primeiro",
                    "sPrevious": "Anterior",
                    "sNext":     "Seguinte",
                    "sLast":     "Último"
                }
            }
        })

        $('#previousTable').DataTable({
            "dom": '<"top"<"toolbar">f>rtpil',
            "aoColumns": [
                null,
                null,
                { "bSortable": false },
                { "bSortable": false },
                null,
                { "bSortable": false },
                null
            ],
            language: { 
                "sProcessing":   "A processar...",
                "sLengthMenu":   "Mostrar _MENU_ registos",
                "sZeroRecords":  "Não foram encontrados resultados",
                "sInfo":         "Mostrando _START_ a _END_ de _TOTAL_ registos",
                "sInfoEmpty":    "Mostrando 0 a 0 de 0 registos",
                "sInfoFiltered": "(filtrado de _MAX_ registos no total)",
                "sInfoPostFix":  "",
                "sSearch":       "Procurar:",
                "sUrl":          "",
                "oPaginate": {
                    "sFirst":    "Primeiro",
                    "sPrevious": "Anterior",
                    "sNext":     "Seguinte",
                    "sLast":     "Último"
                }
            },
            initComplete: function () {
                $("div.toolbar").html('<form class="form-inline" style=""> <div class="col-md-2"> <div class="form-group"> <label class="sr-only" for="searchID">ID</label> <div class="input-group"> <div class="input-group-addon">ID</div><select class="form-control" id="searchID"> <option value=""></option> </select> </div></div></div><div class="col-md-2"> <div class="form-group"> <label class="sr-only" for="searchID">Utilizador</label> <div class="input-group"> <div class="input-group-addon">Utilizador</div><select class="form-control" id="searchUser"> <option value=""></option> </select> </div></div></div><div class="col-md-2"> <div class="form-group"> <label class="sr-only" for="searchID">Razão</label> <div class="input-group"> <div class="input-group-addon">Razão</div><select class="form-control" id="searchReason"> <option value=""></option> </select> </div></div></div></form>');
                $("#previousTable_paginate").addClass("col-md-4");
                this.api().columns([0]).every(function () {
                    var column = this;
                    var select = $("#searchID")
                        .on("change", function () {
                            var val = $.fn.DataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? "^" + val + "$" : "", true, false)
                                .draw();
                        });
                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="'+d+'">'+d+'</option>')
                    });
                })
                this.api().columns([1]).every(function () {
                    var column = this;
                    var select = $("#searchUser")
                        .on("change", function () {
                            var val = $.fn.DataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? "^" + val + "$" : "", true, false)
                                .draw();
                        });
                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="'+d+'">'+d+'</option>')
                    });
                })
                this.api().columns([4]).every(function () {
                    var column = this;
                    var select = $("#searchReason")
                        .on("change", function () {
                            var val = $.fn.DataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? "^" + val + "$" : "", true, false)
                                .draw();
                        });
                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="'+d+'">'+d+'</option>')
                    });
                })
            }

        });
    })
</script>
}