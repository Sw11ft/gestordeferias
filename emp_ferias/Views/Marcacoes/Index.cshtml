@model List<emp_ferias.Models.IndexMarcacaoViewModel>

@{
    ViewBag.Title = "Índice > Marcações";
}



<!-- APPROVE MODAL -->
<div class="modal fade" id="approve" tabindex="-1" role="dialog" aria-labelledby="approve">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="approvetitle">Aprovar Marcação</h4>
            </div>
            <div class="modal-body" style="text-align: left">
                <p>Está prestes a aceitar a marcação. Continuar?</p>
                
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("Approve", "Marcacoes", FormMethod.Post, htmlAttributes: new { id = "approveform" }))
                {
                    @Html.AntiForgeryToken();
                    <div class="form-horizontal">
                        <button type="button" id="closeModalButton" class="btn btn-round-neutral" data-dismiss="modal">Cancelar</button>
                        <input name="accept" type="submit" value="Aceitar" class="btn btn-round-success" />
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<!--END MODAL-->
<!-- REJECT MODAL -->
<div class="modal fade" id="reject" tabindex="-1" role="dialog" aria-labelledby="reject modal">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="rejecttitle">Rejeitar Marcação </h4>
            </div>
            @using (Html.BeginForm("Reject", "Marcacoes", FormMethod.Post, htmlAttributes: new { id = "rejectform"}))
            {
                @Html.AntiForgeryToken();
                <div class="modal-body" style="text-align: left">
                    <p><b>Está prestes a rejeitar a marcação.<br />Para continuar,</b> escreva o motivo:</p>

                    @Html.TextArea("Razao", new { @class = "form-control", id = "rejectTextBox", rows = "5", placeholder = "Motivo" })
                    @Html.Hidden("marcId", new { id = "marcId"})

                    <div class="panel panel-default" id="charactersPanel">
                        <div class="panel-body" style="text-align: center">
                            <b>Caracteres restantes: </b><span id="characters">100</span>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <div class="form-horizontal">
                        <button id="closeModalButton" type="button" class="btn btn-round-neutral" data-dismiss="modal">Cancelar</button>
                        <input id="rejectButton" name="reject" type="submit" value="Rejeitar" class="btn btn-round-danger" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<!--END MODAL--> 

<!--jumbotron-->
<div class="jumbotron">
    <div class="container-fluid body-content">
        <h1 id="icon">Marcações</h1>
        <p class="lead container body-content jumbotron-description"></p>
    </div>
</div>

<div class="content marcacoes-content">
    <!--breadcrumb-->
    <div class="col-sm-9" style="padding: 0">
        <ol class="breadcrumb">
            <li>@Html.ActionLink("Página Inicial", "Index", "Home")</li>
            <li class="active">Marcações</li>
        </ol>
    </div>
    <!--botões-->
    <div class="col-sm-3" style="padding: 0">
        <button onclick="location.href='@Url.Action("Create", "Marcacoes")'; return false;" class="btn btn-round-neutral" id="create-new-button"><i class="fa fa-bookmark" aria-hidden="true"></i>&nbsp;Criar Marcação</button>
        <button onclick="location.href='@Url.Action("Overview", "Marcacoes")'; return false;" class="btn btn-round-success" id="overview-button"><i class="fa fa-calendar-o" aria-hidden="true"></i>&nbsp;Calendário</button>
    </div>
    
    <br />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <!--action PENDING panel-->
    <div class="col-sm-12" style="padding: 0">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="col-sm-1"></div>
                <div class="col-sm-10">
                    Ação Pendente
                    
                        @{
                            var i = 0;
                            foreach (var item in Model)
                            {
                                if (!item.Aprovado && item.RazaoAprovacao == null && item.UserNameAprovacao == null)
                                {
                                    i++;
                                }
                            }
                            <span class="badge @(i == 0 ? "":"bg-primary")" id="pendingAmount"><text>@i</text></span>
                        }
                           
                </div>
                <div class="col-sm-1">
                    <button button id="table1btn" class="btn-simple" style="float:right; outline: none !important" data-toggle="collapse" data-target="#table1"><i id="collapse-btn" class="fa fa-caret-down" aria-hidden="true"></i></button>
                </div>
            </div>
        </div>
    </div>
    <!--pending table-->
    <div class="collapse" id="table1" style="width: 100%">
        <table class="table table-hover marcacoes-table" id="actionPendingTable" style="width: 100%">
            <thead>
                <tr>
                    <th>
                        ID
                    </th>
                    <th>
                        Utilizador
                    </th>
                    <th>
                        Data de Pedido
                    </th>
                    <th>
                        Duração
                    </th>
                    <th>
                        Razão
                    </th>
                    <th>
                        Notas
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    if (item.RazaoAprovacao == null && item.UserNameAprovacao == null)
                    {
                        <tr class="bg-info">
                            <td>
                                @Html.DisplayFor(modelItem => item.id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataPedido)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataInicio) – @Html.DisplayFor(modelItem => item.DataFim)
                                <button style="outline: none" type="button" class="btn-simple" data-container="body" data-trigger="hover" data-toggle="popover" data-placement="bottom" data-content="Total: 
                                @{
                                    var length = (item.DataFim - item.DataInicio).Days +1;
                                    string lengthstring;
                                    if (length == 1)
                                    {
                                        lengthstring = length + " dia";
                                    }
                                    else
                                    {
                                        lengthstring = length + " dias";
                                    }
                                    } @lengthstring"><i class="fa fa-info-circle" aria-hidden="true"></i></button>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Motivo)
                            </td>
                            <td>
                                @{
                                    if (!(item.Observacoes == null) && !(item.Observacoes.Length == 0))
                                    {
                                        @item.Observacoes.Substring(0, Math.Min(item.Observacoes.Length, 25))
                                            if (item.Observacoes.Count() > 25)
                                            {
                                               <text>... </text> <button style="outline: none" type="button" class="btn-simple" data-container="body" data-trigger="hover" data-toggle="popover" data-placement="bottom" data-content="@item.Observacoes"><i class="fa fa-info-circle" aria-hidden="true"></i></button>
                                        }
                                    }
                                    else
                                    {
                                        @Html.Label("–", new { @class = "empty-notes" });
                                    }
                                }

                            </td>
                            <td>

                                <div class="btn-group">
                                    <button id="@(item.id)" class="btn btn-round-success" type="button" data-toggle="modal" data-target="#approve" >Aprovar</button>
                                    <button id="@(item.id)" class="btn btn-round-danger" type="button" data-toggle="modal" data-target="#reject">Rejeitar</button>
                                </div>  
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <!--PREVIOUS panel-->
    <div class="col-sm-12" style="padding: 0">
        <div class="panel panel-default">
            <div class="panel-body">
                Anteriores
            </div>
        </div>
    </div>

    <!--previous table-->
    @*<form class="form-inline">
        <div class="col-sm-3">
            <div class="form-group">
                <label class="sr-only" for="searchID">ID</label>
                <div class="input-group">
                    <div class="input-group-addon">ID</div>
                    <select class="form-control" id="searchID">
                        <option value=""></option>
                    </select>
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                <label class="sr-only" for="searchID">Utilizador</label>
                <div class="input-group">
                    <div class="input-group-addon">Utilizador</div>
                    <select class="form-control" id="searchUser">
                        <option value=""></option>
                    </select>
                </div>
            </div>
        </div>
        <div class="col-sm-3">
            <div class="form-group">
                <label class="sr-only" for="searchID">Razão</label>
                <div class="input-group">
                    <div class="input-group-addon">Razão</div>
                    <select class="form-control" id="searchReason">
                        <option value=""></option>
                    </select>
                </div>
            </div>
        </div>
    </form>*@
    <br />
    <div class="table-wrapper col-sm-12">
        <table id="previousTable" class="table table-hover marcacoes-table" style="width: 100%">
            <thead>
                <tr>
                    <th>
                        ID
                    </th>
                    <th>
                        Utilizador
                    </th>
                    <th>
                        Data de Pedido
                    </th>
                    <th>
                        Duração
                    </th>
                    <th>
                        Razão
                    </th>
                    <th>
                        Notas
                    </th>
                    <th>
                        Estado <i class="fa fa-info" aria-hidden="true" tabindex="0" data-toggle="popover" data-trigger="hover" data-placement="top" data-content="Passe por cima de cada um dos estados das marcações para mais informações"></i>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    if (item.UserNameAprovacao != null)
                    {
               
                        <tr class="bg-info">
                    
                            <td>
                                @Html.DisplayFor(modelItem => item.id)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UserName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataPedido)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.DataInicio) – @Html.DisplayFor(modelItem => item.DataFim)
                                <button style="outline: none" type="button" class="btn-simple" data-container="body" data-trigger="hover" data-toggle="popover" data-placement="bottom" data-content="Total:
                                    @{
                                        var length = (item.DataFim - item.DataInicio).Days +1;
                                        string lengthstring;
                                        if (length == 1)
                                        {
                                            lengthstring = length + " dia";
                                        }
                                        else
                                        {
                                            lengthstring = length + " dias";
                                        }
                                        } @lengthstring">
                                    <i class="fa fa-info-circle" aria-hidden="true"></i>
                                </button>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Motivo)
                            </td>
                            <td>
                                @{
                                    if (!(item.Observacoes == null) && !(item.Observacoes.Length == 0))
                                    {
                                        @item.Observacoes.Substring(0, Math.Min(item.Observacoes.Length, 15))
                                        if (item.Observacoes.Count() > 15)
                                        {
                                            <text>... </text> <button style="outline: none" type="button" class="btn-simple" data-container="body" data-trigger="hover" data-toggle="popover" data-placement="bottom" data-content="@item.Observacoes"><i class="fa fa-info-circle" aria-hidden="true"></i></button>
                                        }
                                    }
                                    else
                                    {
                                        @Html.Label("–", new { @class = "empty-notes" });
                                    }
                                }
                            </td>
                            <td>
                                @{
                                    if (item.Aprovado)
                                    {
                                        if (item.DataInicio.Date <= DateTime.Today.Date)
                                        {
                                            if (item.DataFim.Date < DateTime.Today.Date)
                                            {
                                                <span class="label label-default" tabindex="0" data-toggle="popover" data-placement="top" data-trigger="hover" data-html="true" data-content="<b>Aprovado por</b> @item.UserNameAprovacao<br><br>Acabou à @{var ii = DateTime.Today - item.DataFim;} <text>@ii.Days</text> dia(s).">Finalizado</span>
                                            }
                                            else
                                            {
                                                <span class="label label-primary" tabindex="0" data-toggle="popover" data-placement="top" data-trigger="hover" data-html="true" data-content="<b>Aprovado por</b> @item.UserNameAprovacao<br><br>@{var ii = item.DataFim - DateTime.Today;} <text>@ii.Days</text> dia(s) restante(s).">Em Progresso</span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="label label-info" tabindex="0" data-toggle="popover" data-placement="top" data-trigger="hover" data-html="true" data-content="<b>Aprovado por</b> @item.UserNameAprovacao<br><br>Começa em @{var ii = item.DataInicio - DateTime.Today;} <text>@ii.Days</text> dia(s).">Aprovado</span>
                                        }
                                    }
                                    else
                                    {
                                        <span class="label label-danger"tabindex="0" data-toggle="popover" data-placement="top" data-trigger="hover" data-html="true" data-content="<b>Rejeitado por</b> @item.UserNameAprovacao<br><br><b>Reason: </b>@item.RazaoAprovacao">Rejeitado</span>
                                    }
                                }
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

</div>

@section scripts{
<script type="text/javascript">
    $(document).ready(function () {
        if ($('#pendingAmount').text() == '0') {
            $('#table1btn').hide();
        }
        
        $('#table1').on('show.bs.collapse', function () {
            $('#collapse-btn').addClass('fa-caret-up').removeClass('fa-caret-down');
        })

        $('#table1').on('hide.bs.collapse', function () {
            $('#collapse-btn').addClass('fa-caret-down').removeClass('fa-caret-up');
        })

        $('[data-toggle="popover"]').popover();

        $('.modal').on('show.bs.modal', function (e) {
            var $trigger = $(e.relatedTarget);
            $('#approvetitle').text("Approve Request #" + $trigger.attr('id'));
            $('#rejecttitle').text("Reject Request #" + $trigger.attr('id'));
            $('#approveform').attr("action", "/Marcacoes/Approve/" + $trigger.attr('id'));
            $('#marcId').attr("value", $trigger.attr('id'));
            $('#rejectTextBox').val('');
        })

        $('#rejectButton').prop('disabled', true);

        $('#rejectTextBox').on('change keyup paste click', function() {
            $('#characters').text(100 - $('#rejectTextBox').val().trim().length);

            if ($('#rejectTextBox').val().trim().length == 0) {
                $('#rejectButton').prop('disabled', true);
            }
            else if ($('#rejectTextBox').val().trim().length > 100) {
                $('#rejectButton').prop('disabled', true);
            }
            else {
                $('#rejectButton').prop('disabled', false);
            }
        })


        $('#actionPendingTable').DataTable({
            "aoColumns": [
                null,
                null,
                { "bSortable": false },
                { "bSortable": false },
                null,
                { "bSortable": false },
                { "bSortable": false }
            ],
            language: { 
                "sProcessing":   "A processar...",
                "sLengthMenu":   "Mostrar _MENU_ registos",
                "sZeroRecords":  "Não foram encontrados resultados",
                "sInfo":         "Mostrando _START_ a _END_ de _TOTAL_ registos",
                "sInfoEmpty":    "Mostrando 0 a 0 de 0 registos",
                "sInfoFiltered": "(filtrado de _MAX_ registos no total)",
                "sInfoPostFix":  "",
                "sSearch":       "Procurar:",
                "sUrl":          "",
                "oPaginate": {
                    "sFirst":    "Primeiro",
                    "sPrevious": "Anterior",
                    "sNext":     "Seguinte",
                    "sLast":     "Último"
                }
            }
        })

        $('#previousTable').DataTable({
            "dom": '<"top"<"toolbar">f>rtpil',
            "aoColumns": [
                null,
                null,
                { "bSortable": false },
                { "bSortable": false },
                null,
                { "bSortable": false },
                null
            ],
            language: { 
                "sProcessing":   "A processar...",
                "sLengthMenu":   "Mostrar _MENU_ registos",
                "sZeroRecords":  "Não foram encontrados resultados",
                "sInfo":         "Mostrando _START_ a _END_ de _TOTAL_ registos",
                "sInfoEmpty":    "Mostrando 0 a 0 de 0 registos",
                "sInfoFiltered": "(filtrado de _MAX_ registos no total)",
                "sInfoPostFix":  "",
                "sSearch":       "Procurar:",
                "sUrl":          "",
                "oPaginate": {
                    "sFirst":    "Primeiro",
                    "sPrevious": "Anterior",
                    "sNext":     "Seguinte",
                    "sLast":     "Último"
                }
            },
            initComplete: function () {
                $("div.toolbar").html('<form class="form-inline" style=""> <div class="col-sm-2"> <div class="form-group"> <label class="sr-only" for="searchID">ID</label> <div class="input-group"> <div class="input-group-addon">ID</div><select class="form-control" id="searchID"> <option value=""></option> </select> </div></div></div><div class="col-sm-2"> <div class="form-group"> <label class="sr-only" for="searchID">Utilizador</label> <div class="input-group"> <div class="input-group-addon">Utilizador</div><select class="form-control" id="searchUser"> <option value=""></option> </select> </div></div></div><div class="col-sm-2"> <div class="form-group"> <label class="sr-only" for="searchID">Razão</label> <div class="input-group"> <div class="input-group-addon">Razão</div><select class="form-control" id="searchReason"> <option value=""></option> </select> </div></div></div></form>');
                $("#previousTable_paginate").addClass("col-sm-4");
                this.api().columns([0]).every(function () {
                    var column = this;
                    var select = $("#searchID")
                        .on("change", function () {
                            var val = $.fn.DataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? "^" + val + "$" : "", true, false)
                                .draw();
                        });
                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="'+d+'">'+d+'</option>')
                    });
                })
                this.api().columns([1]).every(function () {
                    var column = this;
                    var select = $("#searchUser")
                        .on("change", function () {
                            var val = $.fn.DataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? "^" + val + "$" : "", true, false)
                                .draw();
                        });
                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="'+d+'">'+d+'</option>')
                    });
                })
                this.api().columns([4]).every(function () {
                    var column = this;
                    var select = $("#searchReason")
                        .on("change", function () {
                            var val = $.fn.DataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? "^" + val + "$" : "", true, false)
                                .draw();
                        });
                    column.data().unique().sort().each(function (d, j) {
                        select.append('<option value="'+d+'">'+d+'</option>')
                    });
                })
            }

        });
            
    })
</script>
}