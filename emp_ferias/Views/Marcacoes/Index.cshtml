@using MvcFlashMessages
@using emp_ferias.lib.Classes
@model emp_ferias.Models.IndexMarcacaoViewModel
@{
    ViewBag.Title = "Marcações - Gestor de Férias";
}
<style>
    .breadcrumb > li:last-child::before {
        content: ""    
    }
</style>
<div class="modal fade" id="filters" tabindex="-1" role="dialog" aria-labelledby="filters">
    <div class="modal-dialog modal-sm" role="document" id="filters-body">
        <div class="modal-content">
            <div class="modal-header" id="filters-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="filters-title">Filtros</h4>
            </div>
            <div class="modal-body" style="text-align: left">

                <label id="ID-label">ID</label>
                <input type="number" class="form-control" id="ID-input" />

                <hr class="filters-divider" />

                <label id="userName-label">Nome de Utilizador</label>
                <input type="text" class="form-control" id="userName-input" />

                <hr class="filters-divider" />

                <label>Razão</label>
                <select class="form-control" id="motivoSelect">
                    <option value=""></option>
                    <option value="0">Férias</option>
                    <option value="1">Justificada</option>
                    <option value="2">Injustificada</option>
                </select>

                <hr class="filters-divider" />

                <label>Estado</label>
                <select class="form-control" id="statusSelect">
                    <option value=""></option>
                    <option value="1">Rejeitado</option>
                    <option value="2">Expirado</option>
                    <option value="3">Finalizado</option>
                    <option value="4">Em Progresso</option>
                    <option value="5">Aprovado</option>
                </select>

                <hr class="filters-divider" />

                <label>Data de Pedido</label>
                <div class="form-inline" id="filters-dates">
                    <div class="input-group divs_Datas data_my " id="pedido-fromDate">
                        <input type="text" class="form-control filterDateInput" id="pedido-fromDate-input" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    <label id="dateFilter-label">&nbsp; até &nbsp;</label>
                    <div class="input-group divs_Datas data_my" id="pedido-toDate">
                        <input type="text" class="form-control filterDateInput" id="pedido-toDate-input" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>

                <hr class="filters-divider" />

                <label>Data de Inicio</label>
                <div class="form-inline" id="filters-dates">
                    <div class="input-group divs_Datas data_my" id="inicio-fromDate">
                        <input type="text" class="form-control filterDateInput" id="inicio-fromDate-input" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    <label id="dateFilter-label">&nbsp; até &nbsp;</label>
                    <div class="input-group divs_Datas data_my" id="inicio-toDate">
                        <input type="text" class="form-control filterDateInput" id="inicio-toDate-input" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>

                <hr class="filters-divider" />

                <label>Data de Fim</label>
                <div class="form-inline" id="filters-dates">
                    <div class="input-group divs_Datas data_my" id="fim-fromDate">
                        <input type="text" class="form-control filterDateInput" id="fim-fromDate-input" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    <label id="dateFilter-label">&nbsp; até &nbsp;</label>
                    <div class="input-group divs_Datas data_my" id="fim-toDate">
                        <input type="text" class="form-control filterDateInput" id="fim-toDate-input" />
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" id="closeModalButton" class="btn btn-round-default" data-dismiss="modal">Cancelar</button>
                <button type="button" value="Aprovar" class="btn btn-round-success" onclick="FillTable()" data-dismiss="modal">OK</button>
            </div>
        </div>
    </div>
</div>
@if (Model.LoggedUser.RoleTests.IsAdmin || Model.LoggedUser.RoleTests.IsMod)
{
    <!-- APPROVE MODAL -->
    <div class="modal fade" id="approve" tabindex="-1" role="dialog" aria-labelledby="approve">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="approvetitle">Aprovar Marcação</h4>
                </div>
                @using (Html.BeginForm("Approve", "Marcacoes", FormMethod.Post, htmlAttributes: new { id = "approveform" }))
                {
                    <div class="modal-body" style="text-align: left">
                        <p>Está prestes a aceitar a marcação. Continuar?</p>
                        <br />
                        @Html.Hidden("marcId", new { id = "marcId" })
                        @Html.CheckBox("sendEmail", new { id = "sendEmail", @checked = "checked" }) Notificar por email
                    </div>
                    <div class="modal-footer">

                        @Html.AntiForgeryToken()
                        <div class="form-horizontal">
                            <button type="button" id="closeModalButton" class="btn btn-round-default" data-dismiss="modal">Cancelar</button>
                            <input name="approve" type="submit" value="Aprovar" class="btn btn-round-success" />
                        </div>

                    </div>
                }
            </div>
        </div>
    </div>
    <!--END MODAL-->
    <!-- REJECT MODAL -->
    <div class="modal fade" id="reject" tabindex="-1" role="dialog" aria-labelledby="reject modal">
        <div class="modal-dialog modal-sm" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="rejecttitle">Rejeitar Marcação </h4>
                </div>
                @using (Html.BeginForm("Reject", "Marcacoes", FormMethod.Post, htmlAttributes: new { id = "rejectform" }))
                {
                    @Html.AntiForgeryToken();
                    <div class="modal-body" style="text-align: left">
                        <p><b>Está prestes a rejeitar a marcação.<br />Para continuar,</b> escreva o motivo:</p>

                        @Html.TextArea("Razao", new { @class = "form-control", id = "rejectTextBox", rows = "5", placeholder = "Motivo" })
                        <div class="panel panel-default" id="charactersPanel">
                            <div class="panel-body" style="text-align: center">
                                <b>Caracteres restantes: </b><span id="characters">100</span>
                            </div>
                        </div>
                        @Html.Hidden("marcRejectId", new { id = "marcRejectId" })
                        @Html.CheckBox("sendEmail", new { id = "sendEmail", @checked = "checked" }) Notificar por email
                    </div>
                    <div class="modal-footer">
                        <div class="form-horizontal">
                            <button id="closeModalButton" type="button" class="btn btn-round-default" data-dismiss="modal">Cancelar</button>
                            <input id="rejectButton" name="reject" type="submit" value="Rejeitar" class="btn btn-round-danger" />
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
    <!--END MODAL-->
}

<!--jumbotron-->
<div class="jumbotron">
    <div class="container-fluid body-content">
        <h1 id="icon">
            Marcações&nbsp;
            @if (Model.LoggedUser.RoleTests.IsAdmin)
            {
                <button class="btn-simple" style="font-size: 0.8em" onclick="location.href='@Url.Action("Refresh", "Marcacoes")'; return false;"><i data-count="Admin" class="fa fa-refresh notification-icon"></i></button>
            }
        </h1>
        <p class="lead container body-content jumbotron-description"></p>
    </div>
</div>

<div class="content">
    <!--breadcrumb-->
        <ol class="overflow breadcrumb">
            <li>@Html.ActionLink("Página Inicial", "Index", "Home")</li>
            <li class="active">Marcações</li>
            <li class="pull-right">@Html.ActionLink("Minhas Marcações","My")</li>
            <li class="pull-right">@Html.ActionLink("Calendário","Overview")</li>
            <li class="pull-right">@Html.ActionLink("Criar Marcação","Create")</li>
        </ol>    
    @Html.RenderFlash()

    @if (Model.LoggedUser.RoleTests.IsAdmin || Model.LoggedUser.RoleTests.IsMod)
    {    
        <!--action PENDING panel-->
        <div id="actionPending-panel" class="regionHeader overflow panel panel-default no-margin-top" data-toggle="collapse" data-trigger="click" data-target="#table1">
                <div class="regionHeader-header panel-heading">
                    <h3 class="panel-title">
                        Ação Pendente
                        @{
                            var i = 0;
                            foreach (var item in Model.Marcacoes)
                            {
                                if (item.Status == Status.Pendente)
                                {
                                    i++;
                                }
                            }
                            <span class="badge" id="pendingAmount"><text>@i</text></span>
                        }
                        <button button id="table1btn" class="btn-simple" data-toggle="collapse" data-target="#table1"><i id="collapse-btn" class="fa fa-caret-down" aria-hidden="true"></i></button>
                    </h3>
                </div>
            </div>
        <!--pending table-->
        <div class="regionHeader overflow panel panel-default no-margin-top collapse" id="table1">
            <table class="table table-hover marcacoes-table" id="actionPendingTable" style="width: 100%">
                <thead>
                    <tr>
                        <th>
                            ID
                        </th>
                        <th>
                            Utilizador
                        </th>
                        <th>
                            Data de Pedido
                        </th>
                        <th>
                            Duração
                        </th>
                        <th>
                            Razão
                        </th>
                        <th>
                            Notas
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Marcacoes)
                    {
                        if (item.Status == Status.Pendente)
                        {
                            <tr class="bg-info">
                                <td>
                                    @Html.DisplayFor(modelItem => item.Id)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.User.UserName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DataPedido)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DataInicio) – @Html.DisplayFor(modelItem => item.DataFim)
                                    <button style="outline: none" type="button" class="btn-simple" data-container="body" data-trigger="hover" data-toggle="popover" data-placement="bottom" data-content="Total: 
                                    @{
                                        var length = (item.DataFim - item.DataInicio).Days +1;
                                        string lengthstring;
                                        if (length == 1)
                                        {
                                            lengthstring = length + " dia";
                                        }
                                        else
                                        {
                                            lengthstring = length + " dias";
                                        }
                                        } @lengthstring"><i class="fa fa-info-circle" aria-hidden="true"></i></button>
                                </td>
                                <td>
                                    @(item.Motivo == Motivo.Ferias ? Html.Name("Férias") : Html.DisplayFor(modelItem => item.Motivo)) 
                                </td>
                                <td>
                                    @{
                                        if (!(item.Notas == null) && !(item.Notas.Length == 0))
                                        {
                                            @item.Notas.Substring(0, Math.Min(item.Notas.Length, 25))
                                                if (item.Notas.Count() > 25)
                                                {
                                                   <text>... </text> <button style="outline: none" type="button" class="btn-simple" data-container="body" data-trigger="hover" data-toggle="popover" data-placement="bottom" data-content="@item.Notas"><i class="fa fa-info-circle" aria-hidden="true"></i></button>
                                            }
                                        }
                                        else
                                        {
                                            @Html.Label("–", new { @class = "empty-notes" });
                                        }
                                    }

                                </td>
                                <td>
                                    <div class="btn-group">
                                        <button id="@(item.Id)" class="btn btn-round-success" type="button" data-toggle="modal" data-target="#approve">Aprovar</button>
                                        <button id="@(item.Id)" class="btn btn-round-danger" type="button" data-toggle="modal" data-target="#reject">Rejeitar</button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    }
    <!--PREVIOUS panel-->
    <div class="regionHeader panel panel-default no-margin-top" id="tablePanel">
        <div class="regionHeader-header panel-heading">
            <h3 class="panel-title">Todas as marcações</h3>
        </div>
    </div>
    <div class="panel panel-default" id="filterPanel">
        <div class="panel-heading" id="filterPanel-header">
            <h3 class="panel-title">Filtros</h3>
        </div>
        <div class="panel-body bg-info">
            <div id="filtertags" class="pull-left">
                Sem filtros definidos.
                <a id="filters-shortcut" data-toggle="modal" data-target="#filters">Editar.</a>
                <div class="tag-wrapper">
                    <span class="label label-success label-left">ID</span><span class="label label-primary label-right">
                        12&thinsp;
                        <i class="fa fa-times removetag"></i>&thinsp;
                    </span>
                </div>
                <div class="tag-wrapper">
                    <span class="label label-success label-left">Data de Inicio</span><span class="label label-primary label-right">
                        27/02/2016&thinsp;
                        <i class="fa fa-times removetag"></i>&thinsp;
                    </span>
                </div>

            </div>
            <div class="col-md-4 pull-right">
                <button type="button" class="btn btn-round-primary" id="filter-Limpar" onclick="CleanButton()">Limpar</button>
                <button type="button" class="btn btn-round-primary" id="filter-OK" data-toggle="modal" data-target="#filters">Editar</button>
            </div>
        </div>
    </div>
    <div id="previousTable_loading">
        <i class="fa fa-cog fa-spin fa-3x fa-fw" id="tableState-symbol"></i>
    </div>
    <table id="previousTable" class="table table-hover marcacoes-table" data-url="@Url.Action("IndexTableData")"> 
    </table>

</div>

@section scripts{
<script src="~/bower_components/numbox/numbox.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#ID-input").NumBox({ type: "integer", separator: "", min: 1 });
        if ($('#pendingAmount').text() == '0') {
            $('#table1btn').hide();
        }

        $('#table1').on('show.bs.collapse', function () {
            $('#collapse-btn').addClass('fa-caret-up').removeClass('fa-caret-down');
        })

        $('#table1').on('hide.bs.collapse', function () {
            $('#collapse-btn').addClass('fa-caret-down').removeClass('fa-caret-up');
        })

        $('[data-toggle="popover"]').popover();

        $('.modal').on('show.bs.modal', function (e) {
            var $trigger = $(e.relatedTarget);
            $('#approvetitle').text("Aprovar marcação #" + $trigger.attr('id'));
            $('#rejecttitle').text("Rejeitar marcação #" + $trigger.attr('id'));
            $('#dismisstitle').text("Ignorar marcação #" + $trigger.attr('id'));
            $('#marcId').attr("value", $trigger.attr('id'));
            $('#marcRejectId').attr("value", $trigger.attr('id'));
            $('#marcRejectId').attr("value", $trigger.attr('id'));
            $('#rejectTextBox').val('');
        })

        $('#rejectButton').prop('disabled', true);

        $('#rejectTextBox').on('change keyup paste click', function () {
            $('#characters').text(100 - $('#rejectTextBox').val().trim().length);

            if ($('#rejectTextBox').val().trim().length == 0) {
                $('#rejectButton').prop('disabled', true);
            }
            else if ($('#rejectTextBox').val().trim().length > 100) {
                $('#rejectButton').prop('disabled', true);
            }
            else {
                $('#rejectButton').prop('disabled', false);
            }
        })

        $('#actionPendingTable').DataTable({
            "aoColumns": [
                null,
                null,
                { "bSortable": false },
                { "bSortable": false },
                null,
                { "bSortable": false },
                { "bSortable": false }
            ],
            language: {
                "sProcessing": "A processar...",
                "sLengthMenu": "Mostrar _MENU_ registos",
                "sZeroRecords": "Não foram encontrados resultados",
                "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ registos",
                "sInfoEmpty": "Mostrando 0 a 0 de 0 registos",
                "sInfoFiltered": "(filtrado de _MAX_ registos no total)",
                "sInfoPostFix": "",
                "sSearch": "Procurar:",
                "sUrl": "",
                "oPaginate": {
                    "sFirst": "Primeiro",
                    "sPrevious": "Anterior",
                    "sNext": "Seguinte",
                    "sLast": "Último"
                }
            }
        })

        FillTable();
        $(".removetag").click(function (e) {
            $(this).parent().parent().remove();
        });
    });
    function FillTable() {
        if ($("#pedido-fromDate").data("DateTimePicker").date() == null) {
            var pedido_fromDate = null;    
        }
        else {
            var pedido_fromDate = $("#pedido-fromDate").data("DateTimePicker").date().utc().format("YYYY-MM-DD"); 
        }
        if ($("#pedido-toDate").data("DateTimePicker").date() == null) {
            var pedido_toDate = null;    
        }
        else {
            var pedido_toDate = $("#pedido-toDate").data("DateTimePicker").date().utc().format("YYYY-MM-DD"); 
        }
        if ($("#inicio-fromDate").data("DateTimePicker").date() == null) {
            var inicio_fromDate = null;    
        }
        else {
            var inicio_fromDate = $("#inicio-fromDate").data("DateTimePicker").date().utc().format("YYYY-MM-DD"); 
        }
        if ($("#inicio-toDate").data("DateTimePicker").date() == null) {
            var inicio_toDate = null;    
        }
        else {
            var inicio_toDate = $("#inicio-toDate").data("DateTimePicker").date().utc().format("YYYY-MM-DD"); 
        }
        if ($("#fim-fromDate").data("DateTimePicker").date() == null) {
            var fim_fromDate = null;    
        }
        else {
            var fim_fromDate = $("#fim-fromDate").data("DateTimePicker").date().utc().format("YYYY-MM-DD"); 
        }
        if ($("#fim-toDate").data("DateTimePicker").date() == null) {
            var fim_toDate = null;    
        }
        else {
            var fim_toDate = $("#fim-toDate").data("DateTimePicker").date().utc().format("YYYY-MM-DD"); 
        }
             
        var table = $("#previousTable");
        $.ajax({
            url: "/Marcacoes/IndexTableData",
            type: "GET",
            data: {
                "id": $("#ID-input").NumBox("getRaw"),
                "userName": $("#userName-input").val(),
                "Motivo": $("#motivoSelect").val(),
                "Status": $("#statusSelect").val(),
                "pedido_fromDate": pedido_fromDate,
                "pedido_toDate": pedido_toDate,
                "inicio_fromDate": inicio_fromDate,
                "inicio_toDate": inicio_toDate,
                "fim_fromDate": fim_fromDate,
                "fim_toDate": fim_toDate
            },
            cache: false,
            context: table,
            beforeSend: function () {
                $("#previousTable_loading").show();
                $("#tableState-symbol").removeClass("fa-exclamation-triangle");
                $("#previousTable").hide();
            },
            complete: function () {
                $("#previousTable_loading").hide();
                $("#previousTable").show();
                $("#previousTable").DataTable().destroy();
                $("#previousTable").DataTable({
                    "info": false,
                    "searching": false,
                    "dom": "tlp",
                    "aoColumns": [
                        null,
                        null,
                        { "bSortable": false },
                        { "bSortable": false },
                        null,
                        { "bSortable": false },
                        null
                    ],
                    language: {
                        "sProcessing": "A processar...",
                        "sLengthMenu": "Mostrar _MENU_ registos",
                        "sZeroRecords": "Não foram encontrados resultados",
                        "sInfo": "Mostrando _START_ a _END_ de _TOTAL_ registos",
                        "sInfoEmpty": "Mostrando 0 a 0 de 0 registos",
                        "sInfoFiltered": "(filtrado de _MAX_ registos no total)",
                        "sInfoPostFix": "",
                        "sSearch": "Procurar:",
                        "sUrl": "",
                        "oPaginate": {
                            "sFirst": "Primeiro",
                            "sPrevious": "Anterior",
                            "sNext": "Seguinte",
                            "sLast": "Último"
                        }
                    },
                }).draw();
            },
            success: function (result) {
                this.html(result);
                $('[data-toggle="popover"]').popover();
            },
            error: function () {
                $("#tableState-symbol").removeClass("fa-cog fa-spin fa-3x fa-fw").addClass("fa-exclamation-triangle fa-3x")
            }
        });
    };
    function CleanButton() {
        $("#fromDate-input").val("");
        $("#toDate-input").val("");
        FillTable();
    };
</script>
}